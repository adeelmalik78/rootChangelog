pipeline {
  agent any
  environment {
    DB_CREDS = credentials('PostgresCredentials')
    PATH="/opt/liquibase/liquibase-4.25.1:$PATH"
  }

  stages {

    stage('Move uploaded script to DBScripts directory') {
      steps {
        cleanWs()
        sh 'git clone https://github.com/adeelmalik78/rootChangelog.git'
        withFileParameter('THEFILE') {
            sh '''
                mkdir rootChangelog/DBAUploads
                if [ -z "$THEFILE_FILENAME" ]
                then
                    echo "No file provided ...."
                    exit 0
                elif [[ $THEFILE_FILENAME == *".zip" ]]
                  then
                    cd rootChangelog
                    unzip $THEFILE -d DBAUploads
                    ls -l DBAUploads
                else
                    cd rootChangelog
                    ls -l
                    echo "**** THEFILE=$THEFILE **** and **** THEFILE_FILENAME=$THEFILE_FILENAME ****"
                    mv $THEFILE DBAUploads/$THEFILE_FILENAME
                    cd DBAUploads
                    ls -alh
                    for FILE in *; do 
                      echo ${FILE};
                      cat ${FILE} >> ${FILE}_TEMP
                      echo "--liquibase formatted sql" >> ${FILE}
                      echo "--changeset amalik:$CR-$FILE" > ${FILE}
                      cat ${FILE}_TEMP > ${FILE}
                      cat ${FILE}_TEMP
                      cat ${FILE};
                      rm ${FILE}_TEMP
                    done
                    # cat DBAUploads/$THEFILE_FILENAME
                fi
            '''
        }
      }
    }

    stage('Liquibase Flow') {
      steps {
        sh '''
          cd rootChangelog
          # tag database
          if [[ $CR != "" ]]
          then
            liquibase --url=${DB_URL} \
                    --username=$DB_CREDS_USR \
                    --password=$DB_CREDS_PSW \
                    tag \
                    --tag=$CR
          fi
          # Run Liquibase flow file
          liquibase --url=${DB_URL} \
                    --username=$DB_CREDS_USR \
                    --password=$DB_CREDS_PSW \
                    flow \
                    --flow-file=Flowfiles/liquibase-update.flowfile.yaml
        '''
        publishHTML([allowMissing: false, alwaysLinkToLastBuild: false, keepAll: true, reportDir: "rootChangelog/reports", reportFiles: 'liquibaseReport.html', reportName: 'Liquibase_HTML_Report', reportTitles: ''])
      }
    }
    
  }  // end stages
} // end pipeline

