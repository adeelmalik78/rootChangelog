pipeline {
  agent any
//   parameters {
//     base64File 'THEFILE'
//   }
  stages {

    stage('Move uploaded script to DBScripts directory') {
      steps {
        cleanWs()
        sh 'git clone https://github.com/adeelmalik78/rootChangelog.git'
        withFileParameter('THEFILE') {
            if ($THEFILE_FILENAME == "") {
                currentBuild.result = 'SUCCESS'
            }
            sh '''
                if [ -z "$THEFILE_FILENAME" ]
                then
                    echo "No file provided ...."
                else
                    ls -alh rootChangelog
                    echo THEFILE=$THEFILE
                    echo THEFILE_FILENAME=$THEFILE_FILENAME
                    mv $THEFILE rootChangelog/DBAUploads/$THEFILE_FILENAME
                    ls -alh rootChangelog/DBAUploads
                    // cat rootChangelog/DBAUploads/$THEFILE_FILENAME
                fi
            '''
        }
      }
    }

    stage('Liquibase Flow') {
      steps {
        sh '''
            export PATH=/opt/liquibase/liquibase-4.25.1:$PATH
            cd rootChangelog
            liquibase flow --flow-file=Flowfiles/liquibase-update.flowfile.yaml
        '''
        publishHTML([allowMissing: false, alwaysLinkToLastBuild: false, keepAll: true, reportDir: "rootChangelog/reports", reportFiles: 'update.report.html', reportName: 'Update_HTML_Report', reportTitles: ''])
      }
    }


    // stage('Liquibase Quality Checks') {
    //   steps {
    //     sh '''
    //         export PATH=/opt/liquibase/liquibase-4.25.1:$PATH
    //         cd rootChangelog
    //         liquibase checks run
    //     '''
    //   }
    // }
    
    // stage('Changelog Validation') {
    //   steps {
    //     sh '''
    //         export PATH=/opt/liquibase/liquibase-4.25.1:$PATH
    //         cd rootChangelog
    //         liquibase validate
    //     '''    
    //   }
    // }

    // stage('Liquibase Status') {
    //   steps {
    //     sh '''
    //         export PATH=/opt/liquibase/liquibase-4.25.1:$PATH
    //         cd rootChangelog
    //         liquibase status --verbose
    //     '''    
    //   }
    // }    

    // stage('Liquibase Update') {
    //   steps {
    //     sh '''
    //         export PATH=/opt/liquibase/liquibase-4.25.1:$PATH
    //         cd rootChangelog
    //         liquibase update
    //         ls -alh
    //     '''    
    //     // publishHTML([allowMissing: false, alwaysLinkToLastBuild: false, keepAll: true, reportDir: "rootChangelog/reports", reportFiles: 'update.report.html', reportName: 'Update_HTML_Report', reportTitles: ''])

    //   }
    // }  

    // stage('Liquibase History') {
    //   steps {
    //     sh '''
    //         export PATH=/opt/liquibase/liquibase-4.25.1:$PATH
    //         cd rootChangelog
    //         liquibase history
    //     '''    
    //   }
    // }  
    
  }  // end stages
} // end pipeline

